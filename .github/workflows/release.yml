name: release

on:
  push:
    tags:
    - "v[0-9]+.*"

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist
      env:
        CGO_ENABLED: 0
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}

  npmbuild:
    name: Build for Alpine and publish node artifact
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v1
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build project
        run: |
          mkdir out
          CGO_ENABLED=0 go build -a -installsuffix cgo -o ./out/terratag/terratag

      # Setup .npmrc file to publish to GitHub Packages
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'          
          scope: '@env0'

      - run: |
          npm init --yes --scope @env0
          ref=${{ github.ref }}
          tag=\"${ref#"refs/tags/v"}\"
          echo "`jq .version="${tag}" package.json`" > package.json
        working-directory: ./out/terratag

      - run: npm publish --access public ./out/terratag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
